.\"     Title: zmq_poll
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 08/25/2010
.\"    Manual: 0MQ Manual
.\"    Source: 0MQ 2.0.8
.\"
.TH "ZMQ_POLL" "3" "08/25/2010" "0MQ 2\&.0\&.8" "0MQ Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
zmq_poll \- input/output multiplexing
.SH "SYNOPSIS"
\fBint zmq_poll (zmq_pollitem_t \fR\fB\fI*items\fR\fR\fB, int \fR\fB\fInitems\fR\fR\fB, long \fR\fB\fItimeout\fR\fR\fB);\fR
.sp
.SH "DESCRIPTION"
The \fIzmq_poll()\fR function provides a mechanism for applications to multiplex input/output events in a level\-triggered fashion over a set of sockets\&. Each member of the array pointed to by the \fIitems\fR argument is a \fBzmq_pollitem_t\fR structure\&. The \fInitems\fR argument specifies the number of items in the \fIitems\fR array\&. The \fBzmq_pollitem_t\fR structure is defined as follows:
.sp
.sp
.RS 4
.nf
typedef struct
{
    void \fI*socket\fR;
    int \fIfd\fR;
    short \fIevents\fR;
    short \fIrevents\fR;
} zmq_pollitem_t;
.fi
.RE
For each \fBzmq_pollitem_t\fR item, \fIzmq_poll()\fR shall examine either the 0MQ socket referenced by \fIsocket\fR \fBor\fR the standard socket specified by the file descriptor \fIfd\fR, for the event(s) specified in \fIevents\fR\&. If both \fIsocket\fR and \fIfd\fR are set in a single \fBzmq_pollitem_t\fR, the 0MQ socket referenced by \fIsocket\fR shall take precedence and the value of \fIfd\fR shall be ignored\&.
.sp
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
All 0MQ sockets passed to the \fIzmq_poll()\fR function must share the same 0MQ \fIcontext\fR and must belong to the thread calling \fIzmq_poll()\fR\&.
.sp

For each \fBzmq_pollitem_t\fR item, \fIzmq_poll()\fR shall first clear the \fIrevents\fR member, and then indicate any requested events that have occured by setting the bit corresponding to the event condition in the \fIrevents\fR member\&.
.sp
If none of the requested events have occured on any \fBzmq_pollitem_t\fR item, \fIzmq_poll()\fR shall wait up to \fItimeout\fR microseconds for an event to occur on any of the requested items\&. If the value of \fItimeout\fR is 0, \fIzmq_poll()\fR shall return immediately\&. If the value of \fItimeout\fR is \-1, \fIzmq_poll()\fR shall block indefinitely until a requested event has occured on at least one \fBzmq_pollitem_t\fR\&.
.sp
The \fIevents\fR and \fIrevents\fR members of \fBzmq_pollitem_t\fR are bitmasks constructed by OR\(cqing a combination of the following event flags:
.PP
\fBZMQ_POLLIN\fR
.RS 4
For 0MQ sockets, at least one message may be received from the
\fIsocket\fR
without blocking\&. For standard sockets this is equivalent to the
\fIPOLLIN\fR
flag of the
\fIpoll()\fR
system call and generally means that at least one byte of data may be read from
\fIfd\fR
without blocking\&.
.RE
.PP
\fBZMQ_POLLOUT\fR
.RS 4
For 0MQ sockets, at least one message may be sent to the
\fIsocket\fR
without blocking\&. For standard sockets this is equivalent to the
\fIPOLLOUT\fR
flag of the
\fIpoll()\fR
system call and generally means that at least one byte of data may be written to
\fIfd\fR
without blocking\&.
.RE
.PP
\fBZMQ_POLLERR\fR
.RS 4
For standard sockets, this flag is passed through
\fIzmq_poll()\fR
to the underlying
\fIpoll()\fR
system call and generally means that some sort of error condition is present on the socket specified by
\fIfd\fR\&. For 0MQ sockets this flag has no effect if set in
\fIevents\fR, and shall never be returned in
\fIrevents\fR
by
\fIzmq_poll()\fR\&.
.RE
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Note
The \fIzmq_poll()\fR function may be implemented or emulated using operating system interfaces other than \fIpoll()\fR, and as such may be subject to the limits of those interfaces in ways not defined in this documentation\&.
.sp
.SH "RETURN VALUE"
Upon successful completion, the \fIzmq_poll()\fR function shall return the number of \fBzmq_pollitem_t\fR structures with events signaled in \fIrevents\fR or 0 if no events have been signaled\&. Upon failure, \fIzmq_poll()\fR shall return \-1 and set \fIerrno\fR to one of the values defined below\&.
.sp
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
Important
The \fIzmq_poll()\fR function may return \fBbefore\fR the \fItimeout\fR period has expired even if no events have been signaled\&.
.sp
.SH "ERRORS"
.PP
\fBEFAULT\fR
.RS 4
At least one of the members of the
\fIitems\fR
array refers to a
\fIsocket\fR
belonging to a different application thread\&.
.RE
.PP
\fBETERM\fR
.RS 4
At least one of the members of the
\fIitems\fR
array refers to a
\fIsocket\fR
whose associated 0MQ
\fIcontext\fR
was terminated\&.
.RE
.PP
\fBEFAULT\fR
.RS 4
The provided
\fIitems\fR
was not valid (NULL)\&.
.RE
.SH "EXAMPLE"
.PP
\fBPolling indefinitely for input events on both a 0MQ socket and a TCP socket.\fR. 
.sp
.RS 4
.nf
zmq_pollitem_t items [2];
/* First item refers to 0MQ socket \'socket\' */
items[0]\&.socket = socket;
items[0]\&.events = ZMQ_POLLIN;
/* Second item refers to TCP socket \'fd\' */
items[1]\&.socket = NULL;
items[1]\&.fd = fd;
items[1]\&.events = ZMQ_POLLIN;
/* Poll for events indefinitely */
int rc = zmq_poll (items, 2, \-1);
assert (rc >= 0);
/* Returned events will be stored in items[]\&.revents */
.fi
.RE
.sp
.SH "SEE ALSO"
\fBzmq_socket\fR(3) \fBzmq_send\fR(3) \fBzmq_recv\fR(3) \fBzmq\fR(7)
.sp
Your operating system documentation for the \fIpoll()\fR system call\&.
.sp
.SH "AUTHORS"
The 0MQ reference manual was written by Martin Lucina <\fImato@kotelna\&.sk\fR\&[1]>, Martin Sustrik <\fIsustrik@250bpm\&.com\fR\&[2]>, and Pieter Hintjens <\fIph@imatix\&.com\fR\&[3]>\&.
.sp
.SH "RESOURCES"
Main web site: \fIhttp://www\&.zeromq\&.org/\fR
.sp
Report bugs to the 0MQ development mailing list: <\fIzeromq\-dev@lists\&.zeromq\&.org\fR\&[4]>
.sp
.SH "COPYRIGHT"
Copyright (c) 2007\-2010 iMatix Corporation and contributors\&. License LGPLv3+: GNU LGPL 3 or later <\fIhttp://gnu\&.org/licenses/lgpl\&.html\fR>\&. This is free software: you are free to change it and redistribute it\&. There is NO WARRANTY, to the extent permitted by law\&. For details see the files COPYING and COPYING\&.LESSER included with the 0MQ distribution\&.
.sp
.SH "NOTES"
.IP " 1." 4
mato@kotelna.sk
.RS 4
\%mailto:mato@kotelna.sk
.RE
.IP " 2." 4
sustrik@250bpm.com
.RS 4
\%mailto:sustrik@250bpm.com
.RE
.IP " 3." 4
ph@imatix.com
.RS 4
\%mailto:ph@imatix.com
.RE
.IP " 4." 4
zeromq-dev@lists.zeromq.org
.RS 4
\%mailto:zeromq-dev@lists.zeromq.org
.RE
